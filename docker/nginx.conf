
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include /etc/nginx/mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;
    server_tokens off;
    # 开启gzip
    gzip on;

    # 启用gzip压缩的最小文件，小于设置值的文件将不会压缩
    gzip_min_length 1k;

    # gzip 压缩级别，1-9，数字越大压缩的越好，也越占用CPU时间，后面会有详细说明
    gzip_comp_level 2;

    # 进行压缩的文件类型。javascript有多种形式，后面的图片压缩不需要的可以自行删除
    gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;

    # 是否在http header中添加Vary: Accept-Encoding，建议开启
    gzip_vary on;

    # 设置压缩所需要的缓冲区大小
    gzip_buffers 4 16k;
    server {
        listen 80;
        #填写绑定证书的域名
        server_name disk.cnovel.club;
        client_max_body_size 2000M;


        root  /usr/share/nginx/html;
        #    set  $proxy_path  "http://172.27.0.10:8888";
        location / {
        try_files $uri $uri/ @router;
        index index.html;
        }
    #    location /api/ {
    #        rewrite ^/api/(.*) /$1 break;
    #        proxy_set_header X-Real-IP $remote_addr;
    #
    #        proxy_set_header Host $http_host;
    #        proxy_pass $proxy_path;
    #        add_header Content-Security-Policy upgrade-insecure-requests;
    #    }
        location @router {
        rewrite ^.*$ /index.html last;
        }
    }
}
